/*
 * MessageDialogPanel.java
 *
 * Created on October 26, 2007, 11:46 PM
 */
package net.thevpc.common.swing.dialog;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

/**
 *
 * @author  vpc
 */
public class MessageDialogPanel extends javax.swing.JPanel {

    private int buttonClicked = -1;
    private String title;
    private MessageDialogType type = MessageDialogType.INFO;

    /** Creates new form MessageDialogPanel */
    public MessageDialogPanel() {
        initComponents();
        okButton.addKeyListener(cancelOnEscape);
        cancelButton.addKeyListener(cancelOnEscape);
        showDetailsButton.addKeyListener(cancelOnEscape);
        discardCheckbox.addKeyListener(cancelOnEscape);
        textArea.addKeyListener(cancelOnEscape);
        textArea.setEditable(false);
    }

    public void setTitle(String title) {
        this.title = title;
        revalidateButtons();
    }

    public String getTitle() {
        return title;
    }

    public MessageDialogType getType() {
        return type;
    }

    public void setType(MessageDialogType type) {
        this.type = type;
        revalidateButtons();
    }

    private void revalidateButtons() {
        showDetailsButton.setVisible(textArea.getText().length() != 0);
        switch (type) {
            case INFO: {
                okButton.setVisible(true);
                cancelButton.setVisible(false);
                break;
            }
            case ERROR: {
                okButton.setVisible(true);
                cancelButton.setVisible(true);
                break;
            }
            case WARNING: {
                okButton.setVisible(true);
                cancelButton.setVisible(true);
                break;
            }
        }
    }

    KeyAdapter cancelOnEscape = new KeyAdapter() {
        @Override
        public void keyTyped(KeyEvent e) {
            if(e.getKeyCode()==KeyEvent.VK_ESCAPE || e.getKeyChar()==KeyEvent.VK_ESCAPE){
                cancelButtonActionPerformed(null);
            }
        }
    };

    /**
     * 
     * @return true if OK clicked
     */
    public boolean showDialog(Component parentComponent) {
        buttonClicked = -1;
        textAreaScrollPane.setVisible(false);
        JDialog d = null;
        Component cc = parentComponent;
        while (cc != null && d == null) {
            if (cc instanceof Dialog) {
                d = new JDialog((Dialog) cc);
                break;
            } else {
                cc = cc.getParent();
            }
        }

        cc = parentComponent;
        while (cc != null && d == null) {
            if (cc instanceof Frame) {
                d = new JDialog((Frame) cc);
                break;
            } else {
                cc = cc.getParent();
            }
        }
        if (d == null) {
            d = new JDialog();
        }
        d.addKeyListener(cancelOnEscape);
        d.setTitle(title != null ? title : MessageDialogType.INFO.equals(type) ? "Info..." : MessageDialogType.WARNING.equals(type) ? "Warning..." : MessageDialogType.ERROR.equals(type) ? "Error..." : "Message");
        d.getContentPane().add(this);
        d.setLocationRelativeTo(parentComponent);
        d.setModal(true);
        d.pack();
        d.setVisible(true);
        return buttonClicked == 1;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        okButton = new javax.swing.JButton();
        textAreaScrollPane = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        cancelButton = new javax.swing.JButton();
        discardCheckbox = new javax.swing.JCheckBox();
        showDetailsButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        messagesContainer = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        okButton.setText("OK"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 8, 2, 2);
        add(okButton, gridBagConstraints);

        textArea.setColumns(20);
        textArea.setRows(5);
        textAreaScrollPane.setViewportView(textArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 4.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(textAreaScrollPane, gridBagConstraints);

        cancelButton.setText("Cancel"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(cancelButton, gridBagConstraints);

        discardCheckbox.setText("Do not show this message in the future"); // NOI18N
        discardCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardCheckboxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(discardCheckbox, gridBagConstraints);

        showDetailsButton.setText("Show Details..."); // NOI18N
        showDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDetailsButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(showDetailsButton, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.weightx = 4.0;
        add(jLabel2, gridBagConstraints);

        messagesContainer.setLayout(new java.awt.GridLayout(-1, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 11, 5);
        add(messagesContainer, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    private void discardCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardCheckboxActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_discardCheckboxActionPerformed

    private void showDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDetailsButtonActionPerformed
        textAreaScrollPane.setVisible(!textAreaScrollPane.isVisible());
        JDialog d = (JDialog) SwingUtilities.getAncestorOfClass(JDialog.class, this);
        if (d != null) {
            d.pack();
        }
    }//GEN-LAST:event_showDetailsButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        buttonClicked = 1;
        JDialog d = (JDialog) SwingUtilities.getAncestorOfClass(JDialog.class, this);
        if (d != null) {
            d.setVisible(false);
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        buttonClicked = 2;
        JDialog d = (JDialog) SwingUtilities.getAncestorOfClass(JDialog.class, this);
        if (d != null) {
            d.setVisible(false);
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    public void setMessage(String message) {
        messagesContainer.removeAll();
        if (message != null) {
            if (message.trim().trim().toLowerCase().startsWith("<html>")) {
                messagesContainer.add(new JLabel(message));
            } else {
                String[] messages = message.trim().split("\n");
                for (String string : messages) {
                    if (string.trim().length() == 0) {
                        messagesContainer.add(new JLabel(" "));
                    } else {
                        messagesContainer.add(new JLabel(string.trim()));
                    }
                }
            }
        }
        revalidateButtons();
    }

    public void setDetails(String message) {
        textArea.setText(message);
        revalidateButtons();
    }

    public void setDiscardEnabled(boolean enable) {
        discardCheckbox.setVisible(enable);
    }
    
    public boolean isDiscardEnabled() {
        return discardCheckbox.isVisible();
    }
    
    public boolean isDiscardSelected() {
        return discardCheckbox.isSelected();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox discardCheckbox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel messagesContainer;
    private javax.swing.JButton okButton;
    private javax.swing.JButton showDetailsButton;
    private javax.swing.JTextArea textArea;
    private javax.swing.JScrollPane textAreaScrollPane;
    // End of variables declaration//GEN-END:variables
}
